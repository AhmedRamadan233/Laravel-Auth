--------------------------------------------------------------------------------------------------------------------------------
1 composer require ichtrojan/laravel-otp 
    =>config 
        =>app.php
            =>providers 
                =>ichtrojan\otp\OtpServicesProviders::class

            =>aliases
                =>'otp' => ichtrojan\otp\otp::class
    =>php artisan migrate
        create otp table
------------------------------------------------------------------------------------------------------------------------------------
2 make a new notification
    =>php artisan make:Notification EmailVerificationNotification
    =>in EmailVerificationNotification
        =>use Otp;
        =>in class EmailVerificationNotification
            =>  use Queueable
                public $message
                public $subject
                public $fromEmail
                public $mailer //to use one or more email
                privet $otp

        => in constractor 
            =>$this->message 
            =>$this->subject
            =>$this->fromEmail
            $this->mailer
            $this->otp = new Otp; // to take instance from otp and use it

        in to mail
            =>
            $otp = $this->otp->generate($notifiable->email,6,60); send to email code contain 6 number and expire 60 second

                ->line('The introduction to the notification.')
                ->action('Notification Action', url('/'))
                ->line('Thank you for using our application!')
                ->mailer('smtp')
                ->subject($this->subject)
                ->greeting('hello'.$notifiable->first_name)
                ->line($this->message);
                // to send code 
                ->line('code: '.$otp->token);

                and in reqister 
                $user->notify(new EmailVerificationNotification());

--------------------------------------------------------------------------------------------------------------------------------
3 use the code to verify email

    =>php artisan make:controller Auth\EmailVerificationNotification
    =>php artisan make:request Auth\EmailVerificationNotification

    => in request 
        =>make authrize = true
        =>make a validation 
            =>'email' => ['require'  , 'email' , 'exist:users'] 
            =>'otp' => ['require' , 'max:6' ]
    
    =>in controller
        public function __constractor(){
            $this->otp = new Otp
        }
        public function email_verification(EmailVerificationNotificationRequest $request){
           //validate otp
           $otp = $this->otp->validate($request->email , $reqister->otp);

           if (!$otp2->status){
            return response()->json([error->$otp] , 401)
           }
           $user = User::where('email', $request->email)->first();
            $user->update(['email_verified_at' => now()]);
        $success = true;
        return response()->json($success, 200);
        }
--------------------------------------------------------------------------------------------------------------
4 finally make a route
 
Route::middleware(['auth:sanctum])->group(function()){
    Route::post(email-verification, [EmailVerificationNotificationController::class , email_verification])
}
-----------------------------------------------------------------------------------------------------------------   
5 i dont want delete email to reqister again 

    =>make a function after constractor and before 
        public function sendEmailVerification(Request $request){
            $request->user()->notify(new EmailVerificationNotification());
        }
    =>and make this Route 
       =>Route::get('email-verification', [EmailVerificationNotificationController::class, 'sendEmailVerification']);

